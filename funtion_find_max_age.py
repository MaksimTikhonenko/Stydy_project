#Завдання 4: Знайти максимальний вік студента з оцінкою 10 або більше для кожного предмету
# students = Список словників, де ключ: назва класу, а значення: кортеж з іменем студента, оцінкою та віком
students = [
    {"Math": ("Alice", 12, 20)},
    {"Math": ("Bob", 11, 19)},
    {"Math": ("Charlie", 9, 21)},
    {"Science": ("Dave", 10, 22)},
    {"Science": ("Eve", 12, 23)},
    {"History": ("Frank", 8, 20)},
    {"History": ("Grace", 11, 21)},
    {"History": ("Heidi", 10, 22)},
    {"Science": ("Ivan", 11, 21)},
    {"Math": ("Judy", 10, 22)},
]
# Функція повинна повертати словник, де ключ: назва класу, а значення: кортеж з і'мям студента та його вік
result = {}
def find_max_age(lst):
    for class_students in lst:
        category = tuple(class_students.keys())
        v = list(class_students.values())
        tupl = v[0]
        name = tupl[0]
        age = tupl[2]

        m = result.get(category)

        # визначити чи це максимальний вік студента у цьому класі

        # якщо у нас вже є максимальний вік для цього класу - переходимо на наступний клас
        if m and age < m[1]:
            continue

        # якщо максимального віку ще не існує для цього класу
        # або
        # попередншй найбільший вік студента має менше значення ніж та на данний момент в циклі зараз
        # то треба зберегти того на якого дивимся зараз як найбільше значення для цього класу
        result[category] = (name, age)

    print("Найстарші студенти у класах :" +str(result))

find_max_age(students)